<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title><%= slug %> FP History</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js" integrity="sha512-894YE6QWD5I59HgZOGReFYm4dnWc1Qt5NtvYSaNcOP+u1T9qYdvdihz0PPSiiqn/+/3e7Jo4EaG7TubfWGUrMQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdn.jsdelivr.net/npm/luxon@1.26.0"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.0.1/dist/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-luxon@1.0.0"></script>
    <script src="https://www.chartjs.org/chartjs-chart-financial/chartjs-chart-financial.js" type="text/javascript"></script>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body {
            background-color: #181a1b;
        }
        .b {
            display: flex;
            flex-flow: row wrap;
            width: 100%;
            overflow: auto;
        }
        @media(min-width: 1200px) {
            .a {
                flex: 0 0 100%;
            }
        }
        @media(max-width: 1200px) {
            .a {
                flex: 0 0 100%;
            }
        }
        .a {
            height: 100vh;
            border-style: solid;
            border-width: 1px;
            border-color: #000;
            display: flex;
            flex-flow: column;
            padding: 10px;
        }
        p {
            flex: 0 0 auto;
            color: #cccccc;
        }
        .c {
            flex: 1 1 0;
        }
    </style>
    <script>
        let chart;
        $(document).ready(function () {
            let parent = $('#1')
            let canvas = document.getElementById('c1')
            canvas.width = parent.width();
            canvas.height = parent.height();
            $.ajax({
                url: '/api/stats',
                method: 'GET',
                headers: {
                    'Accept': 'application/json'
                },
                error: function (jqXHR, error, exception) {
                    console.error(exception)
                },
                success: function (data) {
                    let currentTimeInterval = -1
                    let values = []
                    let open = 0
                    let close = 0
                    let high = 0
                    let low = 9999
                    let i = 0

                    const intervalHours = 6

                    for (let row of data) {
                        let date = new Date(row[0] * 1000 * 60)
                        let interval = Math.floor(date.getHours() / intervalHours)
                        if (interval === currentTimeInterval) {
                            close = row[1]
                            if (row[1] > high) high = row[1]
                            if (row[1] < low) low = row[1]
                            if (i + 1 === data.length) {
                                values.push({
                                    x: luxon.DateTime.fromRFC2822(`${date.toGMTString().split(' ').slice(1, -1).join(' ').slice(0, -3)} Z`).valueOf(),
                                    o: open,
                                    h: high,
                                    l: low,
                                    c: close
                                })
                            }
                        } else {
                            if (close === 0) {
                                open = row[1]
                                currentTimeInterval = interval
                                i++;
                                continue;
                            }
                            values.push({
                                x: luxon.DateTime.fromRFC2822(`${date.toGMTString().split(' ').slice(1, -1).join(' ').slice(0, -3)} Z`).valueOf(),
                                o: open,
                                h: high,
                                l: low,
                                c: close
                            })
                            open = row[1]
                            close = row[1]
                            high = row[1]
                            low = row[1]
                            currentTimeInterval = interval
                        }
                        i++
                    }
                    const ctx = document.getElementById('c1').getContext('2d')
                    chart = new Chart(ctx, {
                        type: 'candlestick',
                        data: {
                            datasets: [{
                                label: "FP (ETH)",
                                data: values,
                                borderColor: Chart.defaults.elements.candlestick.borderColor
                            }]
                        },
                        responsive: true,
                        maintainAspectRatio: false
                    })
                    setTimeout(() => {
                        window.location.reload()
                    }, 15 * 60 * 1000) // reload every 15 minutes
                }
            })
        })
    </script>
</head>
<body style="width: 100%; height: 100%">
    <div class="b">
        <div class="a">
            <p class="text-center">FP History</p>
            <div class="c" id="1">
                <canvas id="c1"></canvas>
            </div>
        </div>
    </div>
</body>
</html>